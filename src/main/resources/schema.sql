create table if not exists USERS
(
    ID       INTEGER primary key auto_increment,
    NAME     CHARACTER VARYING(50),
    EMAIL    CHARACTER VARYING(100) not null,
    LOGIN    CHARACTER VARYING(100) not null,
    birthday DATE,
    UNIQUE (EMAIL),
    UNIQUE (LOGIN)
);

create table if not exists FRIENDS
(
    USER_ID    INTEGER not null references USERS (ID),
    FRIENDS_ID INTEGER not null references USERS (ID),
    primary key (USER_ID, FRIENDS_ID)
);

create table if not exists GENRE
(
    ID   INTEGER primary key,
    NAME CHARACTER VARYING(150) not null

);

create table if not exists MPA
(
    ID   int generated by default as identity primary key,
    NAME CHARACTER VARYING(50) not null

);


create table if not exists FILMS
(
    ID          INTEGER not null primary key auto_increment,
    NAME        CHARACTER VARYING(150),
    DESCRIPTION CHARACTER VARYING(150),
    RELEASEDATE DATE,
    DURATION    REAL,
    RATE        INTEGER,
    GENRE       INTEGER,
    MPA         int          NOT NULL REFERENCES MPA (id) ON DELETE RESTRICT
);




create table if not exists FILMGENRES
(
    GENRE_FILM_ID INTEGER references FILMS (ID),
    GENRE_ID      INTEGER references GENRE (ID),
    primary key (GENRE_FILM_ID, GENRE_ID)
);

CREATE TABLE IF NOT EXISTS LIKES
(
    user_id BIGINT NOT NULL REFERENCES users (id),
    film_id BIGINT NOT NULL REFERENCES films (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, film_id)
);

